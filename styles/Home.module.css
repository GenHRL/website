/* General Page Setup */
.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 1rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  color: #333;
  line-height: 1.6;
}

/* Header Styling (Paper Title, Abstract) */
.header {
  margin-bottom: 2rem;
  padding-bottom: 1.5rem;
  border-bottom: 1px solid #eaeaea;
}

.paperTitle {
  font-size: 2.5rem;
  font-weight: 600;
  text-align: center;
  margin-bottom: 0.5rem;
  color: #1a1a1a;
}

.authors {
  text-align: center;
  font-size: 1.1rem;
  color: #555;
  margin-bottom: 1.5rem;
}

.abstractContainer {
  margin: 1.5rem 0;
  padding: 1rem 1.5rem;
  background-color: #f9f9f9;
  border-left: 4px solid #0070f3; /* Next.js blue for accent */
  border-radius: 4px;
}

.abstractContainer h2 {
  font-size: 1.3rem;
  margin-top: 0;
  margin-bottom: 0.5rem;
}

.abstractText {
  font-size: 0.95rem;
  color: #444;
  text-align: justify;
}

/* Method Section Styling */
.methodSection {
  margin: 2.5rem 0;
  padding: 1.5rem;
  background-color: #fdfdfd; /* Slightly off-white for separation */
  border-radius: 8px;
  border: 1px solid #eee;
}

.methodSection h2 {
  font-size: 1.8rem;
  color: #2c3e50;
  text-align: center;
  margin-top: 0;
  margin-bottom: 1.5rem;
}

.methodLayout {
  display: flex;
  gap: 2rem;
  align-items: flex-start;
}

.methodImageContainer {
  flex: 1 1 40%; /* Allows image to take up to 40% width */
  min-width: 280px; /* Minimum width for the image container */
  background-color: #f0f0f0;
  padding: 1rem;
  border-radius: 6px;
  text-align: center; /* Center the image if it's smaller than container */
  position: relative; /* Added for Next/Image with fill prop */
  /* Ensure it has a defined aspect ratio or height if using fill and object-fit for best results */
  /* For example, you could give it an aspect-ratio or a specific height */
  /* aspect-ratio: 16 / 9; or height: 300px; (adjust as needed) */
  /* If parent controls height, Image with fill will adapt. */
}

.methodImageContainer img { /* Styling direct img child if Next/Image doesn't fully control it */
  max-width: 100%;
  height: auto;
  border-radius: 4px;
}

.caption {
  font-size: 0.85rem;
  color: #666;
  margin-top: 0.75rem;
  font-style: italic;
}

.methodTextContainer {
  flex: 1 1 55%; /* Allows text to take up to 55% width */
}

.methodTextContainer p {
  margin-bottom: 0.8rem;
  line-height: 1.7;
  font-size: 0.98rem;
}

.methodTextContainer strong {
  font-weight: 600;
  color: #333;
  display: block; /* Make strong elements take full line for titles */
  margin-bottom: 0.5rem;
  font-size: 1.1rem;
}

/* End Method Section Styling */

.divider {
  border: none;
  height: 1px;
  background-color: #ddd;
  margin: 2rem 0;
}

/* Task Hierarchy Title */
.taskTitleContainer { /* New container for the main task title and description */
  text-align: center;
  margin-bottom: 2rem;
}

.taskTitle {
  font-size: 2rem;
  /* text-align: center; /* Moved to parent container */
  margin-bottom: 0.5rem;
  color: #1a1a1a;
  /* cursor: pointer; /* Added inline in component */
  display: inline-block; /* To allow centering if it were in a flex container */
  padding: 0.5rem 1rem;
  border-radius: 8px;
  transition: background-color 0.2s ease-in-out;
}

.taskTitle:hover {
  background-color: #f0f0f0; /* Slight hover for clickability */
}

.taskDescription {
  text-align: center;
  font-style: italic;
  color: #666;
  margin-bottom: 2rem;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

/* Main Hierarchy Styling (Tree-like) */
.mainHierarchy {
  margin-bottom: 2rem;
  /* overflow-x: auto; /* Uncomment if the entire L2 tree needs to scroll */
}

.level2ContainerTree {
  display: flex;
  flex-direction: row;
  /* justify-content: space-around; /* Distribute L2 items */
  justify-content: center; /* Center the group of L2 nodes */
  align-items: flex-start; 
  gap: 2rem; 
  padding-top: 20px; 
  position: relative; 
}

/* Optional: A line connecting the L2 items horizontally if desired */
/* .level2ContainerTree::before {
  content: '';
  position: absolute;
  top: 0; 
  left: 5%; 
  right: 5%; 
  height: 2px;
  background-color: #ccc;
  z-index: -1; 
} */

.level2Node {
  display: flex;
  flex-direction: column;
  align-items: center; 
  gap: 1rem; 
  position: relative; 
  /* min-width: 200px; /* Removed, itemCard min-width will influence this */
  width: auto; 
}

/* Line coming DOWN from the (conceptual) horizontal L2 line TO the L2 item card */
.level2Node::before {
  content: '';
  position: absolute;
  top: -20px; /* Starts from above the node, adjust based on .level2ContainerTree padding-top */
  height: 20px; /* Length of the vertical line segment */
  width: 2px;
  background-color: #ccc;
  left: 50%;
  transform: translateX(-50%);
}

.itemCard {
  border: 1px solid #ccc;
  padding: 0.8rem 1.2rem;
  border-radius: 8px;
  cursor: pointer;
  text-align: center; /* Centering text in cards now that they are nodes in a tree */
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out, background-color 0.2s ease-in-out;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  font-weight: 500;
  display: flex; 
  justify-content: center; /* Center content (title & arrow if arrow is inside) */
  align-items: center;
  width: auto; /* Let content define width or set a fixed one */
  min-width: 180px; /* Ensure cards have some width */
  position: relative; /* For arrow positioning if it were absolute */
}

.itemCard .arrow { /* If arrow is part of item card text flow */
  margin-left: 8px;
}

.level1ContainerTree {
  display: flex;
  flex-direction: row;
  justify-content: center; 
  align-items: flex-start;   
  gap: 1.5rem;               
  margin-top: 1rem;          
  padding-top: 15px;         
  padding-bottom: 10px; /* Added padding for scrollbar if it appears */
  padding-left: 0; 
  position: relative; 
  width: 100%; 
  overflow-x: auto; /* Allow L1 rows to scroll horizontally if they are too wide */
  flex-wrap: nowrap; /* Ensure L1 items stay in a single row */
}

/* Line coming DOWN from L2 item card TO the horizontal center of L1 children container */
.level1ContainerTree::before {
  content: '';
  position: absolute;
  top: -1rem; 
  height: calc(1rem + 15px); /* Line from L2 card to padding-top of L1 container */
  width: 2px;
  background-color: #ccc;
  left: 50%;
  transform: translateX(-50%);
}

/* Optional: A line connecting the L1 items horizontally if desired */
/* .level1ContainerTree::after {
  content: '';
  position: absolute;
  top: 15px; // Aligns with padding-top, where L1 items effectively start
  left: 5%; 
  right: 5%; 
  height: 2px;
  background-color: #ccc;
  z-index: -1; 
} */

.level1Node {
  position: relative;
  width: auto; 
  display: flex; 
  flex-direction: column; 
  align-items: center;  
  /* min-width: 160px; /* Removed, itemCard min-width will influence this */
  /* Ensure L1 nodes don't shrink if their itemCard needs space */
  flex-shrink: 0; 
}

/* Line coming DOWN from the (conceptual) horizontal L1 line TO the L1 item card */
.level1Node::before {
  content: '';
  position: absolute;
  top: -15px; /* Starts from the top of the L1 Container's padding-top */
  height: 15px; /* Length of this vertical line segment */
  width: 2px;
  background-color: #ccc;
  left: 50%;
  transform: translateX(-50%); 
}

/* Arrow indicators for open/close state */
.arrow {
  font-size: 0.9rem; /* Slightly smaller arrow */
  transition: transform 0.2s ease-in-out;
  color: #777;
  /* margin-left is handled in .itemCard .arrow if arrow is inline */
}

/* Details Panel (Global, Full-Width) */
.detailsContainer { /* This is the original class name, now used for the global panel */
  margin-top: 2.5rem; /* More space above the global details panel */
  padding: 1.5rem 2rem; /* More padding */
  border: 1px solid #dcdcdc;
  border-radius: 10px;
  background-color: #ffffff; /* Clear white background */
  box-shadow: 0 6px 20px rgba(0,0,0,0.1);
  width: 100%; /* Takes full width of its parent (.mainHierarchy or .container) */
  box-sizing: border-box;
  margin-bottom: 2rem;
}

.detailsContainer h3 {
  margin-top: 0;
  font-size: 1.6rem; /* Larger title for global panel */
  color: #2c3e50;
  margin-bottom: 1.2rem;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.8rem;
}

.tabs {
  display: flex;
  gap: 0.5rem; /* Reduced gap */
  margin-bottom: 1.5rem;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.5rem;
}

.tabButton {
  padding: 0.6rem 1.2rem;
  border: none; /* Cleaner look */
  background-color: transparent;
  cursor: pointer;
  border-radius: 6px 6px 0 0; /* Rounded top corners */
  font-size: 1rem;
  color: #555;
  transition: background-color 0.2s, color 0.2s;
}

.tabButton:hover {
  background-color: #f0f0f0;
  color: #111;
}

.tabButton.active {
  background-color: #0070f3;
  color: white;
  font-weight: 500;
}

.codeBlock {
  background-color: #282c34; /* A common dark theme for code */
  color: #abb2bf;
  padding: 1.2rem;
  border-radius: 6px;
  overflow-x: auto;
  font-family: "Fira Code", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.9rem;
  line-height: 1.5;
  white-space: pre-wrap;
  margin-top: 0.5rem;
}

.videoPlayer {
  width: 100%;
  max-width: 640px; /* Slightly larger max video width */
  aspect-ratio: 16 / 9;
  background-color: #e0e0e0;
  border-radius: 6px;
  margin: 1rem auto;
  display: block;
}

/* Color Styles for items from hierarchyData (retained, can be refined) */
.itemCard.red { border-left: 5px solid #e53935; }
.itemCard.purple { border-left: 5px solid #8e24aa; }
.itemCard.blue { border-left: 5px solid #1e88e5; }
.itemCard.green { border-left: 5px solid #43a047; }
.itemCard.orange { border-left: 5px solid #fb8c00; }
.itemCard.pink { border-left: 5px solid #d81b60; }
.itemCard.magenta { border-left: 5px solid #c2185b; }
.itemCard.blue-light { border-left: 5px solid #039be5; }
.itemCard.blue-dark { border-left: 5px solid #0d47a1; }
.itemCard.green-medium { border-left: 5px solid #66bb6a; }
.itemCard.green-dark { border-left: 5px solid #2e7d32; }
.itemCard.purple-dark { border-left: 5px solid #5e35b1; }
.itemCard.blue-violet { border-left: 5px solid #3949ab; }
.itemCard.red-dark { border-left: 5px solid #c62828; }

/* Primitive Actions Bar */
.primitiveActionsBar {
  margin-top: 3rem;
  text-align: center;
  padding: 1.5rem;
  background-color: #333;
  color: white;
  border-radius: 8px;
  font-size: 1.2rem;
  font-weight: 500;
}

/* Footer */
.footer {
  text-align: center;
  margin-top: 3rem;
  padding-top: 1.5rem;
  border-top: 1px solid #eaeaea;
  font-size: 0.9rem;
  color: #777;
}

.footer a {
  color: #0070f3;
  text-decoration: none;
}

.footer a:hover {
  text-decoration: underline;
}

/* Responsive adjustments for method section */
@media (max-width: 768px) {
  .methodLayout {
    flex-direction: column;
  }
  .methodImageContainer,
  .methodTextContainer {
    flex-basis: 100%; /* Stack them on smaller screens */
  }
} 